
@model MyMuseo.Models.Collectible
@{
    ViewBag.Title = "Add Item";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<link rel="stylesheet" href="~/Content/fontawesome/font-awesome.css" type="text/css" media="screen" />
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.cropit.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Client Scripts/mvcfoolproof.unobtrusive.min.js")" type="text/javascript"></script>

<style>
    .cropit-preview {
        background-color: #f8f8f8;
        background-size: cover;
        width: 250px;
        height: 250px;
    }
    .cropit-preview-image-container {
        cursor: move;
    }
    .cropit-preview-background {
        opacity: .2;
    }

    .image-size-label {
        margin-top: 10px;
    }

    input.cropit-image-zoom-input {
        position: relative;
    }

    input {
        display: block;
    }
    
    #image-cropper {
        overflow: hidden;
    }
        
</style>

  
<div class="spacer20"></div>
<div style="margin-left: 25px; margin-right: 25px;">
    <div align="center"><span class="text21bold">Add New Item</span></div>
    <div class="spacer20"></div>
    @using (Html.BeginForm("AddCollectibleItem", "Uploader", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="row">
            <div class="col-md-4" align="center">

                <div class="image-editor" id="image-cropper" >
                    <input type="file" name="files" id="file" class="cropit-image-input">
                    <div class="spacer20"></div>
                    <span class="text14bold">Modify the image to adjust how you want the thumbnail to display.</span>
                    <div class="cropit-preview"></div>
                    <div class="image-size-label">
                        Use the slider to zoom in or out
                    </div>
                    <input type="range" class="cropit-image-zoom-input">
                    <div><a href="#" class="rotate-cw-btn" style="font-size: 13px; color:#428bca;"> <i class="fa fa-rotate-right fa-4"></i> <span> Rotate image</span></a></div>
                    <input type="hidden" id="image-data" name="image-data" class="hidden-image-data" />
                    <div class="spacer20"></div>
                    @Html.Partial("_ImageHelp")
                    <div class="spacer20"></div>
                    <div>
                        <div class="image-size-label">
                            <span class="glyphicon glyphicon-music"></span> Select mp3 file for audio item
                        </div>
                        <input type="file" name="files" id="fileMp3">
                    </div>
                </div>
            </div>
            <div class="col-md-8">
                <div>
                    @Html.HiddenFor(model => model.CollectorId)
                    @Html.HiddenFor(model => model.CollectionId)

                    <div class="form-group row">
                        <label class="col-md-3 text18">Title</label>
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.Title, new { @class = "textfield1" })
                            @Html.ValidationMessageFor(model => model.Title)
                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="col-md-3 text18">Collection</label>
                        <div class="col-md-9">
                            @Html.DropDownList("CollectionId", null, "Select...", new { @class = "textfield1" })
                            @Html.ValidationMessageFor(model => model.CollectionId)
                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="col-md-3 text18">Category</label>
                        <div class="col-md-9">
                            @Html.DropDownListFor(m => m.CategoryId, (SelectList)ViewBag.CategoryId, "Choose a Category", new { @class = "textfield1", @onchange = "CheckOtherCategory(this.value)" }) <br />
                            @Html.ValidationMessageFor(model => model.CategoryId)
                        </div>
                    </div>

                    <div class="form-group row" id="OtherCategoryDiv">
                        <label class="col-md-3 text18">Other Category</label>
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.OtherCategory, new { @class = "textfield1" })
                            @Html.ValidationMessageFor(model => model.OtherCategory)
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-3">
                            @Html.DropDownList("ArtistId", null, "Select...", new { @class = "textfield1", @style="width: 200px;" })
                        </div>
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.ArtistName, new { @class = "textfield1" })
                            @Html.ValidationMessageFor(model => model.ArtistName)
                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="col-md-3 text18">Medium</label>
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.Medium, new { @class = "textfield1" })
                            @Html.ValidationMessageFor(model => model.Medium)
                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="col-md-3 text18">Height</label>
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.Height, new { @class = "textfield1" })
                            @Html.ValidationMessageFor(model => model.Height)
                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="col-md-3 text18">Width</label>
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.Width, new { @class = "textfield1" })
                            @Html.ValidationMessageFor(model => model.Width)
                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="col-md-3 text18">Date</label>
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.ItemDate, new { @class = "textfield1" })
                            @Html.ValidationMessageFor(model => model.ItemDate)
                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="col-md-3 text18">Not For Sale</label>
                        <div class="col-md-9">
                            @Html.CheckBoxFor(model => model.NotForSale, new { @class = "textfield1" ,
                            @onclick = "CheckNotForSale(this)"
                       })
                            @Html.ValidationMessageFor(model => model.NotForSale)
                        </div>
                    </div>

                    <div class="form-group row" id="PriceDiv">
                        <label class="col-md-3 text18">Price</label>
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.Price, new { @class = "textfield1" })
                            @Html.ValidationMessageFor(model => model.Price)
                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="col-md-3 text18">Allow Offers</label>
                        <div class="col-md-9">
                            @Html.CheckBoxFor(model => model.AllowOffers, new { @class = "textfield1",
                            @onclick = "CheckAllowOffer(this)"
                       })
                            @Html.ValidationMessageFor(model => model.AllowOffers)
                        </div>
                    </div>

                    <div class="form-group row" id="OfferPriceDiv">
                        <label class="col-md-3 text18">Offer</label>
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.OfferPrice, new { @class = "textfield1" })
                            @Html.ValidationMessageFor(model => model.OfferPrice)
                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="col-md-3 text18">Description</label>
                        <div class="col-md-9">
                            @Html.TextAreaFor(model => model.Description, new { @class = "textarea1" })
                            @Html.ValidationMessageFor(model => model.Description)
                        </div>
                    </div>
                    <div>
                        @Html.ValidationSummary(true)
                    </div>

                    <div class="spacer20"></div>

                    <button type="submit" class="button1">Submit</button>

                </div>
            </div>
        </div>
    }
    <div class="spacer20"></div>
</div>

@Html.Partial("_ImageRequirementsModal")
@Html.Partial("_SmartphoneGuideModal")
@Html.Partial("_ImageMissingModal")


<script type="text/javascript">
    $(function () {
        $("#OtherCategoryDiv").hide();
        $("#OfferPriceDiv").hide();
        $('.image-editor').cropit();
        $('.rotate-cw-btn').click(function () {
            $('#image-cropper').cropit('rotateCW');
        });
        $('form').submit(function () {

            var fileInput = document.getElementById('file');
            var filePath = fileInput.value;
            var allowedExtensions = /(\.jpg|\.jpeg)$/i;
            if (!allowedExtensions.exec(filePath)) {
                $("#image_missing").modal();
                return false;
            }

            var size = parseFloat($("#file")[0].files[0].size / 1024).toFixed(2);
            if (size > 10240) {
                $("#image_missing").modal();
                return false;
            }

            var imageData = $('.image-editor').cropit('export');
            $('.hidden-image-data').val(imageData);
        });
    });

    function CheckOtherCategory(val)
    {
        if (val === '0')
        {
            $("#OtherCategoryDiv").show();
        }
        else
        {
            $("#OtherCategoryDiv").hide();
        }
    }

    function CheckNotForSale(checkBox) {
        if(checkBox.checked == true)
        {
            $("#PriceDiv").hide();
        }
        else {
            $("#PriceDiv").show();
        }
    }

    function CheckAllowOffer(checkBox) {
        if (checkBox.checked == true) {
            $("#OfferPriceDiv").show();
        }
        else {
            $("#OfferPriceDiv").hide();
        }
    }
</script>
